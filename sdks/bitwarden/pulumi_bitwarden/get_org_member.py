# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import sys

import pulumi
import pulumi.runtime

if sys.version_info >= (3, 11):
    pass
else:
    pass
from . import _utilities

__all__ = [
    'GetOrgMemberResult',
    'AwaitableGetOrgMemberResult',
    'get_org_member',
    'get_org_member_output',
]

@pulumi.output_type
class GetOrgMemberResult:
    """
    A collection of values returned by getOrgMember.
    """
    def __init__(__self__, email=None, id=None, name=None, organization_id=None):
        if email and not isinstance(email, str):
            raise TypeError("Expected argument 'email' to be a str")
        pulumi.set(__self__, "email", email)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str | None:
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str | None:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> _builtins.str:
        return pulumi.get(self, "organization_id")


class AwaitableGetOrgMemberResult(GetOrgMemberResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrgMemberResult(
            email=self.email,
            id=self.id,
            name=self.name,
            organization_id=self.organization_id)


def get_org_member(email: _builtins.str | None = None,
                   id: _builtins.str | None = None,
                   organization_id: _builtins.str | None = None,
                   opts: pulumi.InvokeOptions | None = None) -> AwaitableGetOrgMemberResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['email'] = email
    __args__['id'] = id
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('bitwarden:index/getOrgMember:getOrgMember', __args__, opts=opts, typ=GetOrgMemberResult, package_ref=_utilities.get_package()).value

    return AwaitableGetOrgMemberResult(
        email=pulumi.get(__ret__, 'email'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        organization_id=pulumi.get(__ret__, 'organization_id'))
def get_org_member_output(email: pulumi.Input[_builtins.str | None] | None = None,
                          id: pulumi.Input[_builtins.str | None] | None = None,
                          organization_id: pulumi.Input[_builtins.str] | None = None,
                          opts: pulumi.InvokeOptions | pulumi.InvokeOutputOptions | None = None) -> pulumi.Output[GetOrgMemberResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['email'] = email
    __args__['id'] = id
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('bitwarden:index/getOrgMember:getOrgMember', __args__, opts=opts, typ=GetOrgMemberResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetOrgMemberResult(
        email=pulumi.get(__response__, 'email'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        organization_id=pulumi.get(__response__, 'organization_id')))
