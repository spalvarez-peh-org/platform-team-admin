# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import sys

import pulumi
import pulumi.runtime

if sys.version_info >= (3, 11):
    pass
else:
    pass
from . import _utilities

__all__ = [
    'GetOrganizationResult',
    'AwaitableGetOrganizationResult',
    'get_organization',
    'get_organization_output',
]

@pulumi.output_type
class GetOrganizationResult:
    """
    A collection of values returned by getOrganization.
    """
    def __init__(__self__, id=None, name=None, search=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if search and not isinstance(search, str):
            raise TypeError("Expected argument 'search' to be a str")
        pulumi.set(__self__, "search", search)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str | None:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def search(self) -> _builtins.str | None:
        return pulumi.get(self, "search")


class AwaitableGetOrganizationResult(GetOrganizationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrganizationResult(
            id=self.id,
            name=self.name,
            search=self.search)


def get_organization(id: _builtins.str | None = None,
                     search: _builtins.str | None = None,
                     opts: pulumi.InvokeOptions | None = None) -> AwaitableGetOrganizationResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['search'] = search
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('bitwarden:index/getOrganization:getOrganization', __args__, opts=opts, typ=GetOrganizationResult, package_ref=_utilities.get_package()).value

    return AwaitableGetOrganizationResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        search=pulumi.get(__ret__, 'search'))
def get_organization_output(id: pulumi.Input[_builtins.str | None] | None = None,
                            search: pulumi.Input[_builtins.str | None] | None = None,
                            opts: pulumi.InvokeOptions | pulumi.InvokeOutputOptions | None = None) -> pulumi.Output[GetOrganizationResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['search'] = search
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('bitwarden:index/getOrganization:getOrganization', __args__, opts=opts, typ=GetOrganizationResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetOrganizationResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        search=pulumi.get(__response__, 'search')))
