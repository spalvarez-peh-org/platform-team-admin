# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import sys

import pulumi
import pulumi.runtime

if sys.version_info >= (3, 11):
    pass
else:
    pass
from . import _utilities

__all__ = [
    'GetAttachmentResult',
    'AwaitableGetAttachmentResult',
    'get_attachment',
    'get_attachment_output',
]

@pulumi.output_type
class GetAttachmentResult:
    """
    A collection of values returned by getAttachment.
    """
    def __init__(__self__, content=None, id=None, item_id=None):
        if content and not isinstance(content, str):
            raise TypeError("Expected argument 'content' to be a str")
        pulumi.set(__self__, "content", content)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if item_id and not isinstance(item_id, str):
            raise TypeError("Expected argument 'item_id' to be a str")
        pulumi.set(__self__, "item_id", item_id)

    @_builtins.property
    @pulumi.getter
    def content(self) -> _builtins.str:
        return pulumi.get(self, "content")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="itemId")
    def item_id(self) -> _builtins.str:
        return pulumi.get(self, "item_id")


class AwaitableGetAttachmentResult(GetAttachmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAttachmentResult(
            content=self.content,
            id=self.id,
            item_id=self.item_id)


def get_attachment(id: _builtins.str | None = None,
                   item_id: _builtins.str | None = None,
                   opts: pulumi.InvokeOptions | None = None) -> AwaitableGetAttachmentResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['itemId'] = item_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('bitwarden:index/getAttachment:getAttachment', __args__, opts=opts, typ=GetAttachmentResult, package_ref=_utilities.get_package()).value

    return AwaitableGetAttachmentResult(
        content=pulumi.get(__ret__, 'content'),
        id=pulumi.get(__ret__, 'id'),
        item_id=pulumi.get(__ret__, 'item_id'))
def get_attachment_output(id: pulumi.Input[_builtins.str] | None = None,
                          item_id: pulumi.Input[_builtins.str] | None = None,
                          opts: pulumi.InvokeOptions | pulumi.InvokeOutputOptions | None = None) -> pulumi.Output[GetAttachmentResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['itemId'] = item_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('bitwarden:index/getAttachment:getAttachment', __args__, opts=opts, typ=GetAttachmentResult, package_ref=_utilities.get_package())
    return __ret__.apply(lambda __response__: GetAttachmentResult(
        content=pulumi.get(__response__, 'content'),
        id=pulumi.get(__response__, 'id'),
        item_id=pulumi.get(__response__, 'item_id')))
