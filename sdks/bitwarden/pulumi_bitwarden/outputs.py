# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import sys
from typing import Any

import pulumi
import pulumi.runtime

if sys.version_info >= (3, 11):
    pass
else:
    pass

__all__ = [
    'ItemLoginAttachment',
    'ItemLoginField',
    'ItemLoginUri',
    'ItemSecureNoteAttachment',
    'ItemSecureNoteField',
    'ItemSshKeyField',
    'OrgCollectionMember',
    'GetItemLoginAttachmentResult',
    'GetItemLoginFieldResult',
    'GetItemLoginUriResult',
    'GetItemSecureNoteAttachmentResult',
    'GetItemSecureNoteFieldResult',
    'GetItemSshKeyFieldResult',
    'GetOrgCollectionMemberResult',
]

@pulumi.output_type
class ItemLoginAttachment(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fileName":
            suggest = "file_name"
        elif key == "sizeName":
            suggest = "size_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ItemLoginAttachment. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ItemLoginAttachment.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ItemLoginAttachment.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 file_name: _builtins.str,
                 id: _builtins.str,
                 size: _builtins.str,
                 size_name: _builtins.str,
                 url: _builtins.str):
        pulumi.set(__self__, "file_name", file_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "size_name", size_name)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="fileName")
    def file_name(self) -> _builtins.str:
        return pulumi.get(self, "file_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def size(self) -> _builtins.str:
        return pulumi.get(self, "size")

    @_builtins.property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> _builtins.str:
        return pulumi.get(self, "size_name")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        return pulumi.get(self, "url")


@pulumi.output_type
class ItemLoginField(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 boolean: _builtins.bool | None = None,
                 hidden: _builtins.str | None = None,
                 linked: _builtins.str | None = None,
                 text: _builtins.str | None = None):
        """
        :param _builtins.str name: Name of the field.
        :param _builtins.bool boolean: Value of a boolean field.
        :param _builtins.str hidden: Value of a hidden text field.
        :param _builtins.str linked: Value of a linked field.
        :param _builtins.str text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def boolean(self) -> _builtins.bool | None:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @_builtins.property
    @pulumi.getter
    def hidden(self) -> _builtins.str | None:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @_builtins.property
    @pulumi.getter
    def linked(self) -> _builtins.str | None:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @_builtins.property
    @pulumi.getter
    def text(self) -> _builtins.str | None:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")


@pulumi.output_type
class ItemLoginUri(dict):
    def __init__(__self__, *,
                 value: _builtins.str,
                 match: _builtins.str | None = None):
        """
        :param _builtins.str value: URI Value
        :param _builtins.str match: URI Match
        """
        pulumi.set(__self__, "value", value)
        if match is not None:
            pulumi.set(__self__, "match", match)

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        URI Value
        """
        return pulumi.get(self, "value")

    @_builtins.property
    @pulumi.getter
    def match(self) -> _builtins.str | None:
        """
        URI Match
        """
        return pulumi.get(self, "match")


@pulumi.output_type
class ItemSecureNoteAttachment(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fileName":
            suggest = "file_name"
        elif key == "sizeName":
            suggest = "size_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ItemSecureNoteAttachment. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ItemSecureNoteAttachment.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ItemSecureNoteAttachment.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 file_name: _builtins.str,
                 id: _builtins.str,
                 size: _builtins.str,
                 size_name: _builtins.str,
                 url: _builtins.str):
        pulumi.set(__self__, "file_name", file_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "size_name", size_name)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="fileName")
    def file_name(self) -> _builtins.str:
        return pulumi.get(self, "file_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def size(self) -> _builtins.str:
        return pulumi.get(self, "size")

    @_builtins.property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> _builtins.str:
        return pulumi.get(self, "size_name")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        return pulumi.get(self, "url")


@pulumi.output_type
class ItemSecureNoteField(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 boolean: _builtins.bool | None = None,
                 hidden: _builtins.str | None = None,
                 linked: _builtins.str | None = None,
                 text: _builtins.str | None = None):
        """
        :param _builtins.str name: Name of the field.
        :param _builtins.bool boolean: Value of a boolean field.
        :param _builtins.str hidden: Value of a hidden text field.
        :param _builtins.str linked: Value of a linked field.
        :param _builtins.str text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def boolean(self) -> _builtins.bool | None:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @_builtins.property
    @pulumi.getter
    def hidden(self) -> _builtins.str | None:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @_builtins.property
    @pulumi.getter
    def linked(self) -> _builtins.str | None:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @_builtins.property
    @pulumi.getter
    def text(self) -> _builtins.str | None:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")


@pulumi.output_type
class ItemSshKeyField(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 boolean: _builtins.bool | None = None,
                 hidden: _builtins.str | None = None,
                 linked: _builtins.str | None = None,
                 text: _builtins.str | None = None):
        """
        :param _builtins.str name: Name of the field.
        :param _builtins.bool boolean: Value of a boolean field.
        :param _builtins.str hidden: Value of a hidden text field.
        :param _builtins.str linked: Value of a linked field.
        :param _builtins.str text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def boolean(self) -> _builtins.bool | None:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @_builtins.property
    @pulumi.getter
    def hidden(self) -> _builtins.str | None:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @_builtins.property
    @pulumi.getter
    def linked(self) -> _builtins.str | None:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @_builtins.property
    @pulumi.getter
    def text(self) -> _builtins.str | None:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")


@pulumi.output_type
class OrgCollectionMember(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "hidePasswords":
            suggest = "hide_passwords"
        elif key == "readOnly":
            suggest = "read_only"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in OrgCollectionMember. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        OrgCollectionMember.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        OrgCollectionMember.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 id: _builtins.str,
                 hide_passwords: _builtins.bool | None = None,
                 manage: _builtins.bool | None = None,
                 read_only: _builtins.bool | None = None):
        """
        :param _builtins.str id: Identifier.
        :param _builtins.bool hide_passwords: [Experimental] Hide passwords.
        :param _builtins.bool manage: [Experimental] Can manage the collection.
        :param _builtins.bool read_only: [Experimental] Read/Write permissions.
        """
        pulumi.set(__self__, "id", id)
        if hide_passwords is not None:
            pulumi.set(__self__, "hide_passwords", hide_passwords)
        if manage is not None:
            pulumi.set(__self__, "manage", manage)
        if read_only is not None:
            pulumi.set(__self__, "read_only", read_only)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Identifier.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="hidePasswords")
    def hide_passwords(self) -> _builtins.bool | None:
        """
        [Experimental] Hide passwords.
        """
        return pulumi.get(self, "hide_passwords")

    @_builtins.property
    @pulumi.getter
    def manage(self) -> _builtins.bool | None:
        """
        [Experimental] Can manage the collection.
        """
        return pulumi.get(self, "manage")

    @_builtins.property
    @pulumi.getter(name="readOnly")
    def read_only(self) -> _builtins.bool | None:
        """
        [Experimental] Read/Write permissions.
        """
        return pulumi.get(self, "read_only")


@pulumi.output_type
class GetItemLoginAttachmentResult(dict):
    def __init__(__self__, *,
                 file_name: _builtins.str,
                 id: _builtins.str,
                 size: _builtins.str,
                 size_name: _builtins.str,
                 url: _builtins.str):
        pulumi.set(__self__, "file_name", file_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "size_name", size_name)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="fileName")
    def file_name(self) -> _builtins.str:
        return pulumi.get(self, "file_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def size(self) -> _builtins.str:
        return pulumi.get(self, "size")

    @_builtins.property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> _builtins.str:
        return pulumi.get(self, "size_name")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        return pulumi.get(self, "url")


@pulumi.output_type
class GetItemLoginFieldResult(dict):
    def __init__(__self__, *,
                 boolean: _builtins.bool,
                 hidden: _builtins.str,
                 linked: _builtins.str,
                 name: _builtins.str,
                 text: _builtins.str):
        pulumi.set(__self__, "boolean", boolean)
        pulumi.set(__self__, "hidden", hidden)
        pulumi.set(__self__, "linked", linked)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "text", text)

    @_builtins.property
    @pulumi.getter
    def boolean(self) -> _builtins.bool:
        return pulumi.get(self, "boolean")

    @_builtins.property
    @pulumi.getter
    def hidden(self) -> _builtins.str:
        return pulumi.get(self, "hidden")

    @_builtins.property
    @pulumi.getter
    def linked(self) -> _builtins.str:
        return pulumi.get(self, "linked")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def text(self) -> _builtins.str:
        return pulumi.get(self, "text")


@pulumi.output_type
class GetItemLoginUriResult(dict):
    def __init__(__self__, *,
                 match: _builtins.str,
                 value: _builtins.str):
        pulumi.set(__self__, "match", match)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def match(self) -> _builtins.str:
        return pulumi.get(self, "match")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        return pulumi.get(self, "value")


@pulumi.output_type
class GetItemSecureNoteAttachmentResult(dict):
    def __init__(__self__, *,
                 file_name: _builtins.str,
                 id: _builtins.str,
                 size: _builtins.str,
                 size_name: _builtins.str,
                 url: _builtins.str):
        pulumi.set(__self__, "file_name", file_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "size_name", size_name)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="fileName")
    def file_name(self) -> _builtins.str:
        return pulumi.get(self, "file_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def size(self) -> _builtins.str:
        return pulumi.get(self, "size")

    @_builtins.property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> _builtins.str:
        return pulumi.get(self, "size_name")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        return pulumi.get(self, "url")


@pulumi.output_type
class GetItemSecureNoteFieldResult(dict):
    def __init__(__self__, *,
                 boolean: _builtins.bool,
                 hidden: _builtins.str,
                 linked: _builtins.str,
                 name: _builtins.str,
                 text: _builtins.str):
        pulumi.set(__self__, "boolean", boolean)
        pulumi.set(__self__, "hidden", hidden)
        pulumi.set(__self__, "linked", linked)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "text", text)

    @_builtins.property
    @pulumi.getter
    def boolean(self) -> _builtins.bool:
        return pulumi.get(self, "boolean")

    @_builtins.property
    @pulumi.getter
    def hidden(self) -> _builtins.str:
        return pulumi.get(self, "hidden")

    @_builtins.property
    @pulumi.getter
    def linked(self) -> _builtins.str:
        return pulumi.get(self, "linked")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def text(self) -> _builtins.str:
        return pulumi.get(self, "text")


@pulumi.output_type
class GetItemSshKeyFieldResult(dict):
    def __init__(__self__, *,
                 boolean: _builtins.bool,
                 hidden: _builtins.str,
                 linked: _builtins.str,
                 name: _builtins.str,
                 text: _builtins.str):
        pulumi.set(__self__, "boolean", boolean)
        pulumi.set(__self__, "hidden", hidden)
        pulumi.set(__self__, "linked", linked)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "text", text)

    @_builtins.property
    @pulumi.getter
    def boolean(self) -> _builtins.bool:
        return pulumi.get(self, "boolean")

    @_builtins.property
    @pulumi.getter
    def hidden(self) -> _builtins.str:
        return pulumi.get(self, "hidden")

    @_builtins.property
    @pulumi.getter
    def linked(self) -> _builtins.str:
        return pulumi.get(self, "linked")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def text(self) -> _builtins.str:
        return pulumi.get(self, "text")


@pulumi.output_type
class GetOrgCollectionMemberResult(dict):
    def __init__(__self__, *,
                 hide_passwords: _builtins.bool,
                 id: _builtins.str,
                 manage: _builtins.bool,
                 read_only: _builtins.bool):
        pulumi.set(__self__, "hide_passwords", hide_passwords)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "manage", manage)
        pulumi.set(__self__, "read_only", read_only)

    @_builtins.property
    @pulumi.getter(name="hidePasswords")
    def hide_passwords(self) -> _builtins.bool:
        return pulumi.get(self, "hide_passwords")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def manage(self) -> _builtins.bool:
        return pulumi.get(self, "manage")

    @_builtins.property
    @pulumi.getter(name="readOnly")
    def read_only(self) -> _builtins.bool:
        return pulumi.get(self, "read_only")


