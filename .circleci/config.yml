version: 2.1

orbs:
  pulumi: pulumi/pulumi@2.1.0
  python: circleci/python@3.1.0

globals:
  - &context PLATFORM_ADMIN

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

executors:
  local-machine:
    machine: true
    resource_class: peh_runner/local_laptop_runner
    working_directory: ~/project

commands:

  load-environment-vars:
    description: Load environment variables from Bitwarden
    steps:
      - run:
          name: Log into Bitwarden using API key
          command: |
            export BITWARDENCLI_APPDATA_DIR="/tmp/bitwarden-session-$$"

            echo "Logging into Bitwarden..."
            bw login --apikey
            
            echo "Unlock BW session"
            BW_SESSION=$(bw unlock ${BW_PASSWORD} --raw)

            echo "Get GitHub Secrets from Vault"
            ITEM_JSON=$(bw get item "GitHub Secrets" --session "$BW_SESSION")
            export GITHUB_TOKEN=$(echo "$ITEM_JSON" | jq -r '.fields[] | select(.name=="pulumi-github-token") | .value')
            export GITHUB_OWNER=$(echo "$ITEM_JSON" | jq -r '.fields[] | select(.name=="pulumi-github-owner") | .value')
            echo "export GITHUB_TOKEN=$GITHUB_TOKEN" >> $BASH_ENV
            echo "export GITHUB_OWNER=$GITHUB_OWNER" >> $BASH_ENV

            bw lock
            bw logout
            rm -rf "$BITWARDENCLI_APPDATA_DIR"
  static-analysis:
    description: Lint python project
    steps:
      - run:
          name: Lint Python project
          command: |
            uv venv --clear
            uv add -r requirements.txt
            uv sync
            uv sync --group lint
            uv run ruff check . 
  load-pulumi-environment:
    description: Load Pulumi dependencies
    steps:
      - pulumi/login
      - python/install-packages:
          pkg-manager: uv
      - run:
          name: Install packages
          command: |
            uv venv --clear
            uv add -r requirements.txt
            uv sync

jobs:
  pulumi-preview:
    description: |
      Preview Pulumi stack changes
    executor: local-machine
    parameters:
      pulumi_stack:
        description: Pulumi stack to preview
        type: string
    environment:
      PULUMI_STACK: << parameters.pulumi_stack >>
    steps:
      - checkout
      - static-analysis
      - load-environment-vars   
      - load-pulumi-environment
      - pulumi/preview:
          stack: "${PULUMI_STACK}" 
  pulumi-update:
    description: |
      Update Pulumi stack
    executor: local-machine
    parameters:
      pulumi_stack:
        description: Pulumi stack to update
        type: string
    environment:
      PULUMI_STACK: << parameters.pulumi_stack >>
    steps:
      - checkout
      - static-analysis
      - load-environment-vars   
      - load-pulumi-environment
      - pulumi/update:
          stack: "${PULUMI_STACK}"
          skip-preview: false

          
workflows:
  preview:
    jobs:
      - pulumi-preview:
          context: *context
          pulumi_stack: dev
          filters: *on-push-main
  update:
    jobs:
      - pulumi-preview:
          context: *context
          pulumi_stack: dev
          filters: *on-tag-main
      - approve github changes:
          type: approval
          requires:
            - pulumi-preview
          filters: *on-tag-main
      - pulumi-update:
          context: *context
          pulumi_stack: dev
          requires:
            - approve github changes
          filters: *on-tag-main
